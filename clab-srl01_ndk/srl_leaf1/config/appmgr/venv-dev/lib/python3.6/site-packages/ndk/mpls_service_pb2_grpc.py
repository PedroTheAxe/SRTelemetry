# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ndk import mpls_service_pb2 as ndk_dot_mpls__service__pb2
from ndk import sdk_common_pb2 as ndk_dot_sdk__common__pb2


class SdkMgrMplsRouteServiceStub(object):
    """*
    Represents service for MPLS programming.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MplsRouteAddOrUpdate = channel.unary_unary(
                '/srlinux.sdk.SdkMgrMplsRouteService/MplsRouteAddOrUpdate',
                request_serializer=ndk_dot_mpls__service__pb2.MplsRouteAddRequest.SerializeToString,
                response_deserializer=ndk_dot_mpls__service__pb2.MplsRouteAddResponse.FromString,
                )
        self.MplsRouteDelete = channel.unary_unary(
                '/srlinux.sdk.SdkMgrMplsRouteService/MplsRouteDelete',
                request_serializer=ndk_dot_mpls__service__pb2.MplsRouteDeleteRequest.SerializeToString,
                response_deserializer=ndk_dot_mpls__service__pb2.MplsRouteDeleteResponse.FromString,
                )
        self.SyncStart = channel.unary_unary(
                '/srlinux.sdk.SdkMgrMplsRouteService/SyncStart',
                request_serializer=ndk_dot_sdk__common__pb2.SyncRequest.SerializeToString,
                response_deserializer=ndk_dot_sdk__common__pb2.SyncResponse.FromString,
                )
        self.SyncEnd = channel.unary_unary(
                '/srlinux.sdk.SdkMgrMplsRouteService/SyncEnd',
                request_serializer=ndk_dot_sdk__common__pb2.SyncRequest.SerializeToString,
                response_deserializer=ndk_dot_sdk__common__pb2.SyncResponse.FromString,
                )


class SdkMgrMplsRouteServiceServicer(object):
    """*
    Represents service for MPLS programming.
    """

    def MplsRouteAddOrUpdate(self, request, context):
        """/ MPLS route add or update; can add or update more than one MPLS route in one request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MplsRouteDelete(self, request, context):
        """/ MPLS route delete; can delete more than one MPLS route in one request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncStart(self, request, context):
        """/ Synchronization start to begin synchronization operation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncEnd(self, request, context):
        """/ Synchronization end to close synchronization operation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SdkMgrMplsRouteServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MplsRouteAddOrUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.MplsRouteAddOrUpdate,
                    request_deserializer=ndk_dot_mpls__service__pb2.MplsRouteAddRequest.FromString,
                    response_serializer=ndk_dot_mpls__service__pb2.MplsRouteAddResponse.SerializeToString,
            ),
            'MplsRouteDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.MplsRouteDelete,
                    request_deserializer=ndk_dot_mpls__service__pb2.MplsRouteDeleteRequest.FromString,
                    response_serializer=ndk_dot_mpls__service__pb2.MplsRouteDeleteResponse.SerializeToString,
            ),
            'SyncStart': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncStart,
                    request_deserializer=ndk_dot_sdk__common__pb2.SyncRequest.FromString,
                    response_serializer=ndk_dot_sdk__common__pb2.SyncResponse.SerializeToString,
            ),
            'SyncEnd': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncEnd,
                    request_deserializer=ndk_dot_sdk__common__pb2.SyncRequest.FromString,
                    response_serializer=ndk_dot_sdk__common__pb2.SyncResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'srlinux.sdk.SdkMgrMplsRouteService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SdkMgrMplsRouteService(object):
    """*
    Represents service for MPLS programming.
    """

    @staticmethod
    def MplsRouteAddOrUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srlinux.sdk.SdkMgrMplsRouteService/MplsRouteAddOrUpdate',
            ndk_dot_mpls__service__pb2.MplsRouteAddRequest.SerializeToString,
            ndk_dot_mpls__service__pb2.MplsRouteAddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MplsRouteDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srlinux.sdk.SdkMgrMplsRouteService/MplsRouteDelete',
            ndk_dot_mpls__service__pb2.MplsRouteDeleteRequest.SerializeToString,
            ndk_dot_mpls__service__pb2.MplsRouteDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srlinux.sdk.SdkMgrMplsRouteService/SyncStart',
            ndk_dot_sdk__common__pb2.SyncRequest.SerializeToString,
            ndk_dot_sdk__common__pb2.SyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncEnd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/srlinux.sdk.SdkMgrMplsRouteService/SyncEnd',
            ndk_dot_sdk__common__pb2.SyncRequest.SerializeToString,
            ndk_dot_sdk__common__pb2.SyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
